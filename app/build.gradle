apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.mgeows.milo"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    // To avoid lint errors on generated sources, we temporarily disable abortOnError
    // until the fix is released.
    lintOptions {
        abortOnError false
    }
}

dependencies {

    // App's dependencies, including test
    compile 'com.android.support:support-v4:' + rootProject.supportLibVersion;
    compile 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:cardview-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:preference-v7:' + rootProject.supportLibVersion;
    compile 'com.android.support:design:' + rootProject.supportLibVersion;
    compile 'com.android.support.constraint:constraint-layout:' + rootProject.constraintVersion;
    compile 'com.android.support.test.espresso:espresso-idling-resource:' + rootProject.espressoVersion;
    compile 'com.google.guava:guava:' + rootProject.guavaVersion;

    // Architecture components Lifecyles, LiveData, ViewModel, Room
    compile 'android.arch.lifecycle:runtime:' + rootProject.archLifecycleVersion;
    compile 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion;
    compile 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion;
    compile 'android.arch.persistence.room:rxjava2:' + rootProject.archRoomVersion;
    annotationProcessor 'android.arch.lifecycle:compiler:' + rootProject.archLifecycleVersion;
    annotationProcessor 'android.arch.persistence.room:compiler:' + rootProject.archRoomVersion;

    // For testing Room migrations
    testCompile 'android.arch.persistence.room:testing:' + rootProject.archRoomVersion;

    // Other dependencies
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'com.jakewharton:butterknife:' + rootProject.butterknifeVersion;
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + rootProject.butterknifeVersion;
    compile 'com.jakewharton.timber:timber:' + rootProject.timberVersion
    compile 'com.google.dagger:dagger:' + rootProject.daggerVersion;
    annotationProcessor 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion;
    compile 'com.github.bumptech.glide:glide:' + rootProject.glideVersion;
    annotationProcessor 'com.github.bumptech.glide:compiler:' + rootProject.glideVersion;

    // Local unit tests
    testCompile 'junit:junit:' + rootProject.junitVersion;

    // Espresso UI Testing
    androidTestCompile('com.android.support.test.espresso:espresso-core:' + rootProject.espressoVersion, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

}
